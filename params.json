{"name":"Plasmid","tagline":"IndexedDB Synchronization Service","body":"# Plasmid\r\n\r\nPlasmid is a Client/Server storage solution for client-heavy web applications,\r\noffering consistent master/slave updates to keep multiple browser instances\r\nup to do between a single server.\r\n\r\nPlasmid is focused on uses with small, per user databases. Such# as task and\r\ntodo lists, note management, writing tools, and other uses.\r\n\r\nPlasmid is a VERY EARLY project. Today, it functions, but is lacking in a lot\r\nof crucial functions, unit tests, and stability. Please try Plasmid and give\r\nfeedback, but don't rely on it just yet!\r\n\r\n## Setup\r\n\r\nTo try Plasmid, checkout the repository and run the plasmid package. Plasmid\r\nrequires Twisted to run.\r\n\r\n\tpython -m plasmid\r\n\r\nYou can visit the demonstration todo application by viewing http://localhost:8880/\r\nin your browser. If you visit it from multiple browsers, the todo list will be synced,\r\neven during disconnected periods.\r\n\r\n## Management\r\n\r\nIf you'd like to use Plasmid, against my advice, you'll want some moderate security\r\nso create a set of user credentials and grant them access to the appropriate resources.\r\n\r\n\tpython -m plasmid --set-secret ACCESS_TOKEN SECRET\r\n\tpython -m plasmid --grant-permission ACCESS_TOKEN CreateDatabase DATABASE\r\n\tpython -m plasmid --grant-permission ACCESS_TOKEN ReadDatabase DATABASE\r\n\tpython -m plasmid --grant-permission ACCESS_TOKEN WriteDatabase DATABASE\r\n\r\nAnd pass the access and secret tokens as appropriate options to the Database configuration\r\nin your client code. (see below)\r\n\r\n## Usage\r\n\r\nTo connect to and synchronize with a Plasmid database, you'll need to source the required\r\nJavascript files, and setup the needed configuration.\r\n\r\n\t<script type=\"text/javascript\" src=\"base64.js\"></script>\r\n\t<script type=\"text/javascript\" src=\"plasmid.js\"></script>\r\n\t<script type=\"text/javascript\">\r\n\t    var api = window.location.protocol + '//' + window.location.host + '/api/';\r\n\t    var access = \"ACCESS\";\r\n\t    var secret = \"SECRET\";\r\n\r\n\t    var database = new plasmid.Database({\r\n\t        name: 'todo',\r\n\t        api: api,\r\n\t        schema: {\r\n\t            version: 1,\r\n\t            stores: {\r\n\t                todo: {\r\n\t                    sync: true,\r\n\t                    indexes: {\r\n\t                        todo: {key: \"todo\", unique: false, multi: false}\r\n\t                    }\r\n\t                },\r\n\t            },\r\n\t        },\r\n\t        autoSync: false,\r\n\t        access: access,\r\n\t        secret: secret\r\n\t    });\r\n\r\nOnce created, you should begin your interactions with the database only when\r\nit is ready.\r\n\r\n\tdatabase.on('opensuccess', function() {\r\n\t\t// Use the database now.\r\n\t});\r\n\r\n### Database API\r\n\r\n**database.put(key, value)** Put the value at the given key\r\n\r\n**database.get(key)** Get the value for the given key\r\n\r\n**database.get(key).then(do)** Pass the value for the given key to the callback function `do`\r\n\r\n**database.get(key).on('error', onerror)** Try to get the value at the given key, but call the error handler if the attempt fails\r\n\r\n**database.sync()** Push new changes back upstream and pull changes down","google":"UA-953592-23","note":"Don't delete this file! It's used internally to help with page regeneration."}